from tkinter import *
import sqlite3


def edit():
    editor = Tk()
    editor.title('Change Record from Database')
    editor.geometry("500x500")
    editor.configure(bg="LIGHT GREEN")

    conn = sqlite3.connect('docto.db')
    c = conn.cursor()

    record_id = delete_box.get()

    if not record_id.isdigit():
        error_label = Label(editor, text="Please enter a valid ID number.")
        error_label.grid(row=0, column=0, columnspan=2)
        return

    c.execute("SELECT * FROM x WHERE oid=?", (record_id,))
    record = c.fetchone()

    if not record:
        error_label = Label(editor, text="Record not found!")
        error_label.grid(row=0, column=0, columnspan=2)
        return

    model_name_editor = Entry(editor, width=100,bg="pink")
    model_name_editor.grid(row=0, column=1, pady=(10, 0))
    model_name_editor.insert(0, record[0])  

    model_name_label = Label(editor, text="Model Name",bg="pink")
    model_name_label.grid(row=0, column=0, padx=10, pady=(10, 0))

    
    speed_editor = Entry(editor, width=100,bg="pink")
    speed_editor.grid(row=1, column=1, pady=(10, 0))
    speed_editor.insert(0, record[1])
    
    speed_label = Label(editor, text="Speed",bg="pink")
    speed_label.grid(row=1, column=0, padx=10, pady=(10, 0))

    
    fuel_capacity_editor = Entry(editor, width=100,bg="pink")
    fuel_capacity_editor.grid(row=2, column=1, pady=(10, 0))
    fuel_capacity_editor.insert(0, record[2])  

    fuel_capacity_label = Label(editor, text="Fuel_capacity",bg="pink")
    fuel_capacity_label.grid(row=2, column=0, padx=10, pady=(10, 0))

    
    transmission_type_editor = Entry(editor, width=100,bg="pink")
    transmission_type_editor.grid(row=3, column=1, pady=(10, 0))
    transmission_type_editor.insert(0, record[3])  

    transmission_type_label = Label(editor, text="Transmission_type",bg="pink")
    transmission_type_label.grid(row=3, column=0, padx=10, pady=(10, 0))


    engine_stroke_editor = Entry(editor, width=100,bg="pink")
    engine_stroke_editor.grid(row=4, column=1, pady=(10, 0))
    engine_stroke_editor.insert(0, record[4])  

    engine_stroke_label = Label(editor, text="Engine_stroke",bg="pink")
    engine_stroke_label.grid(row=4, column=0, padx=10, pady=(10, 0))

    def save_update():
        updated_model_name = model_name_editor.get()
        updated_speed = speed_editor.get()
        updated_fuel_capacity = fuel_capacity_editor.get()
        updated_transmission_type = transmission_type_editor.get()
        updated_engine_stroke = engine_stroke_editor.get()

        c.execute('''UPDATE x SET
                        model_name = ?\n, speed = ?\n, fuel_capacity= ?\n, transmission_type = ?\n, engine_stroke = ?\n
                        WHERE oid = ?''', 
                  (updated_model_name, updated_speed, updated_fuel_capacity, updated_transmission_type, updated_engine_stroke, record_id))

        conn.commit()
        conn.close()

        editor.destroy()

        query()

    save_btn = Button(editor, text="Save Changes", command=save_update,bg="pink")
    save_btn.grid(row=5, column=0, columnspan=2, pady=20, padx=10, ipadx=104)

    editor.mainloop()

     

    

def submit():
    conn = sqlite3.connect('docto.db')
    c = conn.cursor()
    
    c.execute("INSERT INTO x VALUES (:model_name, :speed, :fuel_capacity, :transmission_type, :engine_stroke)",
              {
                'model_name': model_name.get(),
                'speed': speed.get(),
                'fuel_capacity': fuel_capacity.get(),
                'transmission_type': transmission_type.get(),
                'engine_stroke': engine_stroke.get(),
              })
    
    conn.commit()
    conn.close()

    # Clear the text boxes
    model_name.delete(0, END)
    speed.delete(0, END)
    fuel_capacity.delete(0, END)
    transmission_type.delete(0, END)
    engine_stroke.delete(0, END)

def query():
    conn = sqlite3.connect('docto.db')
    c = conn.cursor()
    c.execute("SELECT *, oid FROM x")
    records = c.fetchall()
    conn.close()

    for widget in root.grid_slaves():
        if int(widget.grid_info()["row"]) >= 30:
            widget.grid_forget()

    print_records = ''
    for record in records:
        print_records += f"(ID: {record[5]}) {record[0]} {record[1]} {record[2]} {record[3]} {record[4]} \n\n\n"

    query_label = Label(root, text=print_records,bg="pink")
    query_label.grid(row=30, column=10, columnspan=3)

def delete():
    conn = sqlite3.connect('docto.db')
    c = conn.cursor()
    c.execute("DELETE FROM x WHERE oid=?", (delete_box.get(),))
    conn.commit()

    delete_box.delete(0, END)

    conn.close()

    query()


root = Tk()
root.title('Motor Brand')
root.geometry("1000x600")
root.configure(bg="LIGHT GREEN")
title_label = Label(root, text="Motor Brand", font=("Arial", 24, "bold"), bg="pink", fg="dark blue")
title_label.grid(row=0, column=0, columnspan=3, pady=20)
conn = sqlite3.connect('docto.db')
c = conn.cursor()

c.execute("""
CREATE TABLE IF NOT EXISTS x(
    model_name TEXT,
    speed TEXT,
    fuel_capacity TEXT,
    transmission_type TEXT,
    engine_stroke TEXT
)
""")
conn.commit()

model_name = Entry(root, width=100,bg="yellow")
model_name.grid(row=2, column=10, padx=20)

speed = Entry(root, width=100,bg="yellow")
speed.grid(row=3, column=10, padx=20)

fuel_capacity = Entry(root, width=100,bg="yellow")
fuel_capacity.grid(row=4, column=10, padx=20)

transmission_type = Entry(root, width=100,bg="yellow")
transmission_type.grid(row=5, column=10, padx=20)

engine_stroke= Entry(root, width=100,bg="yellow")
engine_stroke.grid(row=6, column=10, padx=100)

model_name_label = Label(root, text="Model Name",bg="PINK")
model_name_label.grid(row=2, column=0)

speed_label = Label(root, text="Speed",bg="pink")
speed_label.grid(row=3, column=0)

fuel_capacity_label = Label(root, text="Fuel Capacity",bg="pink")
fuel_capacity_label.grid(row=4, column=0)

transmission_label = Label(root, text="Transmission Label",bg="pink")
transmission_label.grid(row=5, column=0)

engine_stroke_label = Label(root, text="Engine Stroke",bg="pink")
engine_stroke_label.grid(row=6, column=0)

delete_box = Entry(root, width=100,bg="yellow")
delete_box.grid(row=10, column=10, padx=30)

delete_box_label = Label(root, text="Select ID No.",bg="pink")
delete_box_label.grid(row=10, column=0)

submit_btn = Button(root, text="Add Record to Database", command=submit,bg="pink")
submit_btn.grid(row=7, column=10, columnspan=2, pady=10, padx=10, ipadx=180)

query_btn = Button(root, text="Show Records", command=query,bg="pink")
query_btn.grid(row=8, column=10, columnspan=2, pady=10, padx=10, ipadx=205)

delete_btn = Button(root, text="Delete Record", command=delete,bg="pink")
delete_btn.grid(row=12, column=10, columnspan=2, pady=10, padx=10, ipadx=210)

update_btn = Button(root, text="Edit Record", command=edit,bg="pink")
update_btn.grid(row=13, column=10, columnspan=2, pady=10, padx=10, ipadx=215)

root.mainloop()